<?php

/*
 * Implementation of hook_block().
 */
function meego_site_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[0]['info'] = t('Call to action: Sign up for the conference');
    return $blocks;
  }
  
  if ($op == 'view') {
    switch ($delta) {
      case 0:
        global $user;
        $block['subject'] = '';
        // Don't show the block to anonymous users. They get their own call to action.
        if (empty($user->uid)) {
          return $block;
        }
        $sid = db_result(db_query("SELECT sid FROM {signup_log} WHERE nid = 1 AND uid = %d", $user->uid));
        // They've already signed up. Don't remind them again.
        if (!empty($sid)) {
          return $block;
        }
        $node = node_load(1);
        $block['subject'] = t('MeeGo Conference Sign-up');
        $block['content'] = t("Sign-up to attend the MeeGo Conference in Dublin, Ireland November 15-17th, 2010! This free three day conference is open to all who are interested in MeeGo platform and application development.");
        module_load_include('inc', 'signup', 'includes/node_output');
        $block['content'] .= _signup_node_output($node);
        return $block;
    }
  }
}

/*
 * Implementation of hook_form_alter().
 */
function meego_site_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'signup_form') {
    global $user;
    $status = meego_site_get_signup_status($user, $form['nid']['#value']);
    $form['meego_status'] = array(
      '#type' => 'value',
      '#value' => $status,
     );
    // Add the Conference Information profile fields.
    $edit = array();
    $result = _profile_get_fields('Conference Information');
    while ($field = db_fetch_object($result)) {
      $fields[$field->name] = $field;
    }
    $attending_form = profile_form_profile(array(), $user, 'Conference Information');
    $attending_form = array_shift($attending_form);
    $form['attending'] = array(
      '#type' => 'fieldset',
      '#collapsible' => FALSE,
      '#title' => t('Conference information'),
      '#weight' => -1,
    );
    foreach (element_children($attending_form) as $key => $name) {
      $attending_form[$name]['#default_value'] = db_result(db_query('SELECT value FROM {profile_values} WHERE fid = %d AND uid = %d', $fields[$name]->fid, $user->uid));
      $form['attending'][$name] = $attending_form[$name];
    }
    $form['#validate'][] = 'meego_site_signup_form_validate';
    $form['#submit'][] = 'meego_site_signup_form_submit';
  }
}

function meego_site_signup_form_validate(&$form, &$form_state) {
  if (empty($form_state['values']['profile_conference2010_attending15']) && empty($form_state['values']['profile_conference2010_attending16']) && empty($form_state['values']['profile_conference2010_attending17'])) {
    form_set_error('', t('Please specify one day when you plan to attend sessions.'));
  }
}

function meego_site_signup_form_submit(&$form, &$form_state) {
  global $user;
  $result = _profile_get_fields('Conference Information');
  while ($field = db_fetch_object($result)) {
    $fields[$field->name] = $field;
  }
  foreach ($form_state['values'] as $key => $value) {
    db_query("DELETE FROM {profile_values} WHERE fid = %d AND uid = %d", $fields[$key]->fid, $user->uid);
    db_query("INSERT INTO {profile_values} (fid, uid, value) VALUES (%d, %d, '%s')", $fields[$key]->fid, $user->uid, $value);
  }
}

/*
 * Implementation of hook_signup_cancel().
 * Cancel values entered for days attending profile fields.
 */
function meego_site_signup_cancel($signup) {
  global $user;
  db_query("DELETE FROM {profile_values} WHERE fid IN(14, 15, 16) AND uid = %d", $user->uid);
}
/**
 * Implement hook_signup_data_alter().
 * Automatically assign attendees the correct status baed on their organization.
 */
function meego_site_signup_data_alter(&$signup, $form_values) {
  if (!empty($form_values['meego_status'])) {
    $signup->status = $form_values['meego_status'];
  }
}

/*
 * Return the appropriate signup status code for the current user.
 */
function meego_site_get_signup_status($account, $nid) {
  // Do they have an Intel or Nokia email address?
  $mail = strtolower($account->mail);
  // Workaround for profile fields being missing from global $user.
  $account = user_load($account->uid);
  if (empty($account->profile_company))  {
    $account->profile_company = '';
  }
  $company = strtolower($account->profile_company);

  if (strpos($mail, 'intel.com') !== FALSE || strpos($mail, 'nokia.com') !== FALSE) {
    $intel_nokia = TRUE;
  }
  // Did they mention Intel or Nokia in their profile?
  if (strpos($company, 'intel') !== FALSE || strpos($company, 'nokia') !== FALSE) {
    $intel_nokia = TRUE;
  }
  // Note, this assumes that $node->signup_status_limit_type is per status.
  $node = node_load($nid);
  if ($intel_nokia) {
    // Intel/Nokia people go to the wait list automatically.
    return 4;
  }
  else {
    // Check general availability.
    $available = $node->signup_status_limit[1]['limit'] - $node->signup_status_limit[1]['total'];
    if ($available >= 1 || $node->signup_status_limit[1]['limit'] == 0) {
      // General attendee list.
      return 1;
    }
    else {
      // General waitlist.
      return 2;
    }
  }
  // We shouldn't ever make it here, but place folks on the general waitlist just in case.
  return 2;
}

function meego_site_signup_confirm_messages_alter(&$messages = array(), $signup, $node) {
  if (empty($signup->status)) {
    return;
  }
  $messages = array();
  switch ($signup->status) {
    case 4:
      // Intel/Nokia waitlist
      $messages['initial'] = "Thanks for signing up for the MeeGo Conference 2010 as an Intel or Nokia employee! We have limited space held for Intel and Nokia attendees, so attendees from both companies will be approved manually. Conference committee members will contact you directly and you will receive a separate email confirmation when you have been approved to attend.";
      break;
    case 2:
      // General waitlist
      $messages['initial'] = "Thanks for signing up for the MeeGo Conference 2010! We have limited space available, so we've placed you on the waiting list. We'll let you know when a space becomes available.";
      break;
    default:
      // Attending
      $messages['initial'] = t('Thanks for signing up for the MeeGo Conference 2010! Please update your profile and <a href="user/@uid/edit/Conference Information">let us know where you plan to stay.</a>', array('@uid' => $signup->uid));
  }
}
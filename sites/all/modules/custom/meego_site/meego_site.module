<?php

/*
 * Implementation of hook_block().
 */
function meego_site_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[0]['info'] = t('Call to action: Sign up for the conference');
    return $blocks;
  }
  
  if ($op == 'view') {
    switch ($delta) {
      case 0:
        global $user;
        $block['subject'] = '';
        // Don't show the block to anonymous users. They get their own call to action.
        if (empty($user->uid)) {
          return $block;
        }
        $sid = db_result(db_query("SELECT sid FROM {signup_log} WHERE nid = 1 AND uid = %d", $user->uid));
        // They've already signed up. Don't remind them again.
        if (!empty($sid)) {
          return $block;
        }
        $node = node_load(1);
        $block['subject'] = t('MeeGo Conference Sign-up');
        $block['content'] = t("Sign-up to attend the MeeGo Conference in Dublin, Ireland November 15-17th, 2010! This free three day conference is open to all who are interested in MeeGo platform and application development.");
        module_load_include('inc', 'signup', 'includes/node_output');
        $block['content'] .= _signup_node_output($node);
        return $block;
    }
  }
}

/*
 * Implementation of hook_form_alter().
 */
function meego_site_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'signup_form') {
    global $user;
    $status = meego_site_get_signup_status($user, $form['nid']['#value']);
    $form['meego_status'] = array(
      '#type' => 'value',
      '#value' => $status,
     );
    switch ($status) {
      case 1:
        // General attendance.
      case 3:
        // Nokia/Intel reserved attendance.
        break;
      case 2:
        // General waitlist.
      case 4:
        // Nokia/Intel waitlist.
        $form['collapse']['submit']['#value'] = t('Join Waitlist');
        $form['collapse']['note'] = array(
          '#type' => 'markup',
          '#value' => '<span><br/>' . t('Note: You will be placed on a waiting list and notified when a spot becomes available.') . '</span>',
        );
        break;
    }
  }
}

/**
 * Implement hook_signup_data_alter().
 * Automatically assign attendees the correct status baed on their organization.
 */
function meego_site_signup_data_alter(&$signup, $form_values) {
  if (!empty($form_values['meego_status'])) {
    $signup->status = $form_values['meego_status'];
  }
}

/*
 * Return the appropriate signup status code for the current user.
 */
function meego_site_get_signup_status($account, $nid) {
  // Do they have an Intel or Nokia email address?
  $mail = strtolower($account->mail);
  if (empty($acount->profile_company))  {
    $account->profile_company = '';
  }
  $company = strtolower($account->profile_company);

  if (strpos($mail, 'intel.com') !== FALSE || strpos($mail, 'nokia.com') !== FALSE) {
    $intel_nokia = TRUE;
  }
  // Did they mention Intel or Nokia in their profile?
  if (strpos($company, 'intel') !== FALSE || strpos($company, 'nokia.com') !== FALSE) {
    $intel_nokia = TRUE;
  }
  // Note, this assumes that $node->signup_status_limit_type is per status.
  $node = node_load($nid);
  if ($intel_nokia) {
    // Check I/N availability.
    $available = $node->signup_status_limit[3]['limit'] - $node->signup_status_limit[3]['total'];
    if ($available >= 1 || $node->signup_status_limit[3]['limit'] == 0) {
      // Intel/Nokia attendee list.
      return 3;
    }
    else {
      // Intel/Nokia waitlist.
      return 4;
    }
  }
  else {
    // Check general availability.
    $available = $node->signup_status_limit[1]['limit'] - $node->signup_status_limit[1]['total'];
    if ($available >= 1 || $node->signup_status_limit[1]['limit'] == 0) {
      // General attendee list.
      return 1;
    }
    else {
      // General waitlist.
      return 2;
    }
  }
  // We shouldn't ever make it here, but place folks on the general waitlist just in case.
  return 2;
}

function meego_site_signup_confirm_messages_alter(&$messages = array(), $signup, $node) {
  if (!empty($signup->status) && ($signup->status == 4 || $signup->status == 2)) {
    $messages = array();
    $messages['initial'] = "Thanks for signing up. You've been placed on the wait list, and we'll let you know if a space opens up.";
  }
}